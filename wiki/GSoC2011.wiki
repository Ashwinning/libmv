#summary Libmv Google Summer of Code 2011 ideas
#labels blender

= Google Summer of Code 2011 (GSoC2011) =

We are going to apply for GSoC this year.

The main project idea is to propose to one (or more) student(s) to improve libmv's technologies and integrate it into blender.
<wiki:toc max_depth="2" />

= Project ideas  =

== Idea 1: Integrate libmv into Blender ==
This projet will be an initial integration of libmv into Blender. 

Libmv has now many components dedicated or not to camera tracking. 
The main idea is to provide a basic camera tracking component into Blender using libmv. 
Note that we do not want to have all functionalities that other commercial software propose. 
But at the end of the project, anybody should be able to load a footage (images) in Blender and compute the camera trajectory using libmv.
=== Project objectives ===
The major objectives would be
  * Load images in blender and send them to libmv
  * Call the libmv's 2D tracking process and retreive the 2D tracks
  * Display the 2D tracks on images
  * Allow the user to delete wrong tracks and add new ones
  * Call the libmv's camera tracking process
  * Display the estimated camera 3D trajectory
  * A basic coordinate-system tool (scene scale, alignment, ... )

For more information on this integration see [libmvBlenderInterface] and [Blender2DTrackerPlan] (note that these pages will be updated with the new design of libmv, but they show the main idea).

*Important notes* 
Since libmv is still under development: 
  * the API will be modified/improved in order to fit with the project requirements. You will participate on both sides: libmv and blender.
  * the results of the camera tracking (and 2D tracking) will depend on the quality of our algorithms. A very accurate camera trajectory estimation is *NOT* an objective of this projet (but is an objective of libmv ;) )

=== Who we are looking for ===
We are looking for students who
  * have a background in match moving (camera tracking) 
  * already know C++, python and Blender

  * Having an experience in developing Blender components is a big plus
  * Having an experience with one of the main existing commercial software (Boujou, PFTrack, MatchMover, etc.) is a plus.

== Idea 2: Bundle Adjustment Library ==
The next major technologies of libmv (camera calibration and self-calibration, camera and/or point optimization etc.) need to have a Bundle Adjustment (BA) framework.
Since SSBA doesn't support for instance the projective optimization or others specific optimizations, we propose to create a new BA library. 
This project will actively use Eigen library (linear, nonlinear, sparse optimization) and you will certainly contribute to Eigen.
=== Project objectives ===
The major objectives are
  * A generic BA with numerical derivatives
  * A BA with analitical derivatives (camera extrinsics + intrinsics + 3D points)
  * A sparse BA (sparse resolution, camera extrinsics + 3D points)
  
=== Who we are looking for ===
We are looking for students who
  * have a background in computer vision or mathematics
  * have studied (courses) linear/nonlinear optimization
  * already know C++ and Eigen library (or at least Lapack)

  * Having an experience in nonliear optimization is a big plus

== Idea 3: Augmented Reality or SLAM ==
Yes, why not!
=== Project objectives ===
The major objectives are TBD
=== Who we are looking for ===
We are looking for students who
  * have a background in computer vision
  * already know C++
  
= Applying for Libmv GSoC 2011  =
In order to apply to Libmv GSoC 2011, you should
  * Read the project description and make sure your background is appropriate
  * Apply to the [http://socghop.appspot.com/gsoc/student/apply/google/gsoc2011 official Google SoC 2011]
  * Send us your application (to libmv-devel_AT_googlegroups.com) 

This application must contain the following information:
  * Name
  * Location
  * Email address/irc nickname
  * Project description (what are you going to do?) 
  * Project schedule (what you expect to have ready for mid-term and final evaluation? )
  * Background (courses taken: UI, Computer programming, Match moving, etc)
  * Skills (c++, blender etc)
  * Experience (Work and open source)
  * A link to one of your code that you are proud of.