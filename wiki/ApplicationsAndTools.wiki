#summary Some useful applications and tools
Contents
<wiki:toc max_depth="2" />

= Introduction =

Libmv has several applications and tools, this page describes some of them.

= ... =

= Mosaicing video =
== Description ==
*Mosaicing_video* is a tool for making a mosaic from a video (list of images). It uses the following simple approach:

From the given features matches, the chained relatives matrices are estimated (affine or homography) and images are warped and written in a global mosaic image. The overlapping zones are blended and the last image takes 50% of the blending.

_note:_ matches.txt can be obtained using the *tracker* tool
=== Example ===
{{{
mosaicing_video frame1.jpg frameN.jpg -m matches.txt -o mosaic.jpg 
}}}
=== Limitations ===
  * Images must be radially corrected.
  * images must be given in the same order/number than when the *tracker* where called.
  * Only for video
== Results or screenshots ==


= Reconstruct video =
== Description ==
*Reconstruct_video* is a tool that localizes a camera and sparsely reconstruct the 3D scene.

=== Example ===
{{{
reconstruct_video -i matches.txt -o recons.ply -w 640 -h 480 -f 515.295
}}}
=== Limitations ===
  * matches.txt can be obtained using the *tracker* tool

== Results or screenshots ==


= Stabilize video =
== Description ==
*Stabilize* is a tool for stabilizing a video.
It uses the following simple approach:
From the given features matches, the chained relatives matrices are estimated (euclidean or homography) and images are warped so that the features keep the same position in every images.

_note:_ matches.txt can be obtained using the *tracker* tool
=== Example ===
{{{
stabilize frame1.jpg frameN.jpg -m matches.txt -of ./
}}}
=== Limitations ===
  * This version supports *only fixed camera* (no moving camera)
  * The colors are not smoothed, ie. *the pixel colors are not stabilized*
  * The empty spaces are filled with the previous stabilized images and are not blended/smoothed.
  * Images must be radially corrected.
  * images must be given in the same order/number than when the *tracker* where called.
  * Only for video

== Results or screenshots ==


= Tracker =
== Description ==
*Tracker* is a point tracker tool that takes images as input and gives point tracks with matches as output. It saves all results into a .txt file. 

=== Example ===
{{{
tracker frame1.jpg frameN.jpg -o matches.txt
}}}
=== Limitations ===
  * Images must be radially corrected.

== Results or screenshots ==

= Undistort =
== Description ==
*Undistort* is a tool for undistorting images using known lens distortion coefficients. It supports radial (up to 5 coef.) and tangential distortions (up to 2 coef). Undistorted images are saved in the same location as input images, with a suffix ("undist") placed at the end of the file name. 
We use the Brown's distortion model
Variables:
  * {{{(x,y)}}}: 2D point in the image (pixel)
  * {{{(u,v)}}}: the undistorted 2D point (pixel)
  * radial_distortion {{{(k1, k2, k3, ...)}}}: vector containing the    radial distortion
  * tangential_distortion_ {{{(p1, p2)}}}: vector containing the  tangential distortion
  * {{{(cx,cy)}}}: camera principal point

=== Example ===
{{{
undistort image1.jpg imageN.jpg -k1 0.02 -fx 515.295
}}}
=== Limitations ===
  * All images must have the same size.
  * The output images are saved in the same folder
  * The output images are not resized

== Results or screenshots ==